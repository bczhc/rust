name: rust CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        run: |
          sudo apt install rustc -y
          rustc --version
      - name: Build
        run: cargo build -j4 --workspace
      - name: Test lib
        run: cargo test -p lib
      - name: Generate documentation
        run: |
          cargo doc -j4
          tar -cvzf documentation.tgz target/doc/*
      - name: Deploy documentation and push to rust-lib-doc repository
        env:
          ACTION_PAT: ${{ secrets.ACTION_PAT }}
        run: |
          ACCESSABLE_REMOTE="https://bczhc:$ACTION_PAT@github.com/bczhc/rust-lib-doc"
          git clone "$ACCESSABLE_REMOTE"
          cd rust-lib-doc
          git config user.name "bczhc"
          git config user.email "bczhc0@126.com"
          cp -r ../target/doc/* .
          git add --all
          if [[ `git commit -m update | grep "workking tree clean"` != "" ]; then exit; fi
          git push origin gh-pages
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: documentation.tgz

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > installer
          chmod +x installer
          ./installer --default-host x86_64-pc-windows-gnu -y
          rustc --version
      - name: Build
        run: cargo build -j4 --workspace
      - name: Test lib
        run: cargo test -p lib

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > installer
          chmod +x installer
          ./installer -y
          rustc --version
      - name: Build
        run: cargo build -j4 --workspace
      - name: Test lib
        run: cargo test -p lib
