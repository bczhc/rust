name: rust CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > installer
          chmod +x installer
          ./installer -y
          rustup default nightly
          rustc --version
      - name: Build
        run: cargo build -j4 --workspace
      - name: Test
        run: |
          cargo test --workspace -j4
          cargo test --workspace --release -j4
      - name: Generate documentation
        run: |
          RUSTDOCFLAGS="--enable-index-page -Z unstable-options" cargo doc --workspace -j4
          cd target/doc
          tar -czf ../../documentation.tgz *
          cd ../..
      - name: Deploy documentation
        env:
          SSH_PRK: ${{ secrets.SSH_PRK }}
        run: |
          REMOTE_URL='git@github.com:bczhc/rust-lib-doc'

          if [ ! -d ~/.ssh ]; then
              mkdir ~/.ssh
          fi
          ssh-keyscan gitlab.com 2> /dev/null >> ~/.ssh/known_hosts
          echo $SSH_PRK | base64 -d > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

          git config --global user.name "bczhc"
          git config --global user.email "bczhc0@126.com"
          
          mkdir rust-lib-doc
          cd rust-lib-doc
          tar -xzf ../documentation.tgz
          git init
          git add --all
          git commit -m update
          git branch -m master gh-pages
          
          git remote add origin "$REMOTE_URL"
          git push origin gh-pages -f
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: documentation.tgz

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > installer
          chmod +x installer
          ./installer --default-host x86_64-pc-windows-gnu -y
          rustup default nightly
          rustc --version
      - name: Build
        run: cargo build -j4 --workspace
      - name: Test
        run: |
          cargo test --workspace -j4
          cargo test --workspace --release -j4


  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > installer
          chmod +x installer
          ./installer -y
          rustup default nightly
          rustc --version
      - name: Build
        run: cargo build -j4 --workspace
      - name: Test
        run: |
          cargo test --workspace -j4
          cargo test --workspace --release -j4
